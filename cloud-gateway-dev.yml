server:
  port: ${CUSTOM.SERVER.PORT:9080}

#Spring cloud gateway router

spring:
  cloud:
    gateway:
      routes:
        - id: product-service-route
          uri: lb://product-service #ahí lo está haciendo con Eureka server, para hacerlo con el api gateway el balanceo, se pondría http://service-1.com, http://service-2.com
          predicates: 
            - Path=/api/product-service/**
          filters:
            - StripPrefix=2 # para que tome desde el segundo valor del Path
            - AddRequestParameter=flag,true
            - name: CircuitBreaker
              args:
                name: product-service-cb
                statusCodes: 400, 401, 403, 500, 503 # codigos http que identifiquen
                fallbackUri: forward:/api/user-service/api/mitocode/user
        - id: user-service-route
          uri: lb://user-service
          predicates:
            - Path=/api/user-service/**
          filters:
            - StripPrefix=2
            - UserServiceFilter=MitocodeKey,MitocodeValue

# Circuitbreaker config
resilience4j:
  circuitbreaker:
    configs:
      cualquier-cosa:
        slidingWindowSize: 15
        failureRateThreshold: 20
        waitDurationInOpenState: 20s
        permittedNumberOfCallsInHalfOpenState: 8
        slowCallDurationThreshold: 50ms
        slowCallRateThreshold: 50
        automaticTransitionFromOpenToHalfOpenEnabled: true
    instances:
      product-service-cb:
        base-config: cualquier-cosa

mitocode:
  security:
    key: bWl0b2NvZGUtc2VjcmV0bWl0b2NvZGUtc2VjcmV0bWl0b2NvZGUtc2VjcmV0bWl0b2NvZGUtc2VjcmV0bWl0b2NvZGUtc2VjcmV0

#Zipkin configuration
management:
  tracing:
    sampling:
      probability: 1.0

#logging configuration
logging:
  level:
    org:
      springframework:
        web: ERROR # ALL, INFO, ERROR, DEBUG
  pattern:
    level: '%5p[${spring.application.name},%X{traceId:-},%X{spanId:-}]'